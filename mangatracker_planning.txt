App
Track manga volumes (owned, desired, # of volumes)

python program
SQL database holding: name, number of volumes owned, next volume, completed
when run:
	if no database, initialize (continue prompting for series until user stops)
		init: TODO
	print all incomplete series entries (name, next volume)
	list of actions on database:
		New, Select series, List, View: all, [page Down, page Up], eXit
	New:
		prompt user for name, current volumes owned, completed series
		input formats:
			name: string
			current volumes owned: string, comma-delimited
				legal input formats: #, #1-#2
				order not relevant
			completed: y/N (No is default)
	Select Series:
		user enters series name (partial names okay)
		when entered, searches database, prints possible matches (5?)
			if one, automatically selected, otherwise enter 1-5 to select
			prints full status of series, list of actions
			list of actions:
				Edit name, Mark as complete/incomplete, Add volumes, Remove volumes, Back
			Edit name:
				prompt user for name, replace in database
			Mark as complete:
				Toggles complete status, no input needed
			Add volumes:
				no argument - add next volume
				#, #1-#2 - comma-separated, add specific volumes to VOLUMES OWNED
					does not care if already added
			Remove volumes:
				#, #1-#2 - comma-separated, remove specific volumes from VOLUMES OWNED
				POSSIBLE FEATURE: no argument, remove volume last added
			Back:
				return to series selection
		
	View:
		switch between paginated view and printing full list
		full list: print all items
		paginated: view # of items at a time (min 5)
	Page Down/Page Up:
		change page in paginated view
	eXit:
		close program
SQL ENTRY STRUCTURE
NAME:
	string
VOLUMES OWNED:
	string
	comma-delimited 32-bit integers
	each bit = 1 volume
NEXT VOLUME:
	integer
	first 0-bit in VOLUMES OWNED
	calculated whenever VOLUMES OWNED updated
COMPLETED:
	boolean
	marks if all volumes owned
